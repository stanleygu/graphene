angular.module("template/sbml.html",[]).run(["$templateCache",function(n){n.put("template/sbml.html",'<svg ng-controller="sgSbmlLayoutCtrl" xmlns="http://www.w3.org/2000/svg" ng-attr-height="{{imports.height || 800}}"\nng-attr-width="{{imports.width || 800}}">\n  <style>\n  svg .node.species {\n    stroke: #FFB800;\n    stroke-width: 3px;\n    size: 300px;\n  }\n  svg .link {\n    stroke: black;\n    stroke-width: 3px;\n  }\n  svg .link.modifier {\n    stroke-dasharray: 5, 5;\n  }\n  svg .node-label {\n    font-size: 14px;\n    font-family: Georgia;\n    font-weight: bolder;\n    text-anchor: middle;\n    dominant-baseline: middle;\n  }\n  svg .node.selected {\n    stroke: #FF0000;\n  }\n  /*\n  svg .link.selected {\n    stroke: #FF0000;\n  }*/\n  svg marker {\n    overflow: visible;\n  }\n  svg .null-symbol {\n    fill: none;\n    stroke: black;\n    stroke-width: 3px;\n  }\n  </style>\n  <defs>\n    <marker \n      case-sensitive="refX,refY" \n      id="production" \n      viewBox="0 0 10 10" \n      ng-attr-refX="{{-2}}"\n      ng-attr-refY="{{0}}" \n      markerWidth="10" \n      markerHeight="10" \n      orient="auto">\n      <path \n        fill="url(#markerGradient)" \n        stroke="#0013FF" \n        transform="rotate(-90)" \n        ng-attr-d="{{arrow({size: 10, type: \'triangle-down\'})}}">\n      </path>\n    </marker>\n    <marker \n      case-sensitive="refX,refY" \n      id="degradation" \n      viewBox="0 0 10 10" \n      ng-attr-refX="{{-2}}"\n      ng-attr-refY="{{0}}" \n      markerWidth="10" \n      markerHeight="10" \n      orient="auto">\n      <path \n        fill="url(#markerGradient)" \n        stroke="#0013FF" \n        transform="rotate(-90)" \n        ng-attr-d="{{arrow({size: 10, type: \'triangle-down\'})}}"></path>\n    </marker>\n    <marker \n      case-sensitive="refX,refY" \n      id="modifier" \n      viewBox="0 0 10 10" \n      markerWidth="30"\n      markerHeight="30" \n      ng-attr-refX="{{-0.4}}" \n      ng-attr-refY="{{0}}" \n      orient="auto">\n      <path \n        stroke="black" \n        stroke-width="0.3" \n        fill="none" \n        ng-attr-d="{{arrow({size: 1, type: \'circle\'})}}">\n      </path>\n    </marker>\n    <linearGradient id="gradient">\n      <stop offset="5%" stop-color="#FFDC9E"></stop>\n      <stop offset="95%" stop-color="#FFF"></stop>\n    </linearGradient>\n    <linearGradient id="markerGradient">\n      <stop offset="5%" stop-color="rgb(97, 116, 255)"></stop>\n      <stop offset="95%" stop-color="#FFF"></stop>\n    </linearGradient>\n    <linearGradient id="reactionGradient">\n      <stop offset="5%" stop-color="#B0C0FF"></stop>\n      <stop offset="95%" stop-color="#FFF"></stop>\n    </linearGradient>\n  </defs>\n  <g ng-attr-transform="translate({{translate.x || 0}}, {{translate.y || 0}})scale({{scale || 1}})">\n    <g ng-repeat="link in lines.production" ng-switch on="imports.showArcs">\n      <path \n        ng-switch-when="true"\n        class="reaction production link"\n        ng-attr-d={{linkArc(link)}}\n        ng-attr-opacity="{{link.opacity}}"\n        marker-end="url(#production)"\n        fill="none"\n        ></path>\n      <line\n        ng-switch-default\n        class="reaction production link"\n        ng-attr-opacity="{{link.opacity}}"\n        marker-end="url(#production)"\n        ng-attr-x1="{{link.x1}}"\n        ng-attr-y1="{{link.y1}}"\n        ng-attr-x2="{{link.x2}}"\n        ng-attr-y2="{{link.y2}}">\n      </line>\n    </g>\n    <g ng-repeat="link in lines.reactant" ng-switch on="imports.showArcs">\n      <path \n        ng-switch-when="true"\n        class="reaction reactant link" \n        ng-attr-opacity="{{link.opacity}}"\n        ng-attr-d={{linkArc(link)}}\n        fill="none"\n        ></path>\n      <line \n        ng-switch-default\n        ng-click="App.selectReaction(link.target.id); isSelected = !isSelected" \n        ng-class="{selected: isSelected}"\n        class="reaction reactant link"\n        ng-attr-opacity="{{link.opacity}}"\n        ng-attr-x1="{{link.x1}}"\n        ng-attr-y1="{{link.y1}}"\n        ng-attr-x2="{{link.x2}}"\n        ng-attr-y2="{{link.y2}}">\n      </line>\n    </g>\n    <g ng-repeat="link in lines.modifier" ng-switch on="imports.showArcs">\n      <path \n        ng-switch-when="true"\n        class="modifier link" \n        ng-attr-opacity="{{link.opacity}}"\n        ng-attr-d={{linkArc(link)}}\n        fill="none"\n        ></path>\n      <line \n        ng-switch-default\n        ng-click="App.selectReaction(link.target.id); isSelected = !isSelected" \n        ng-class="{selected: isSelected}" \n        class="modifier link" \n        ng-attr-opacity="{{link.opacity}}"\n        ng-attr-x1="{{link.x1}}"\n        ng-attr-y1="{{link.y1}}" \n        ng-attr-x2="{{link.x2}}" \n        ng-attr-y2="{{link.y2}}"\n        marker-end="url(#modifier)">\n      </line>\n    </g>\n    <g\n      ng-repeat="link in lines.source" \n      ng-switch on="imports.showArcs"\n      >\n      <path \n        ng-switch-when="true"\n        class="source link"\n        ng-attr-opacity="{{link.opacity}}"\n        ng-attr-d={{linkArc(link)}}\n        fill="none"\n        ></path>\n      <line\n        ng-switch-default\n        class="source link"\n        ng-attr-x1="{{link.x1}}"\n        ng-attr-y1="{{link.y1}}" \n        ng-attr-x2="{{link.x2}}" \n        ng-attr-y2="{{link.y2}}"></line>\n    </g>\n    <g\n      ng-repeat="link in lines.sink"\n      ng-switch on="imports.showArcs"\n      >\n      <path \n        ng-switch-when="true"\n        class="sink link"\n        ng-attr-opacity="{{link.opacity}}"\n        ng-attr-d={{linkArc(link)}}\n        fill="none"\n        ></path>\n      <line\n        ng-switch-default\n        class="sink link"\n        ng-attr-opacity="{{link.opacity}}"\n        ng-attr-x1="{{link.x1}}"\n        ng-attr-y1="{{link.y1}}" \n        ng-attr-x2="{{link.x2}}" \n        ng-attr-y2="{{link.y2}}"\n        marker-end="url(#production)"></line>\n    </g>\n    <g \n      draggable \n      ng-repeat="node in species" \n      ng-click="imports.events.click(node, this, $event)"\n      ng-mouseover="imports.events.mouseover(node, this, $event)"\n      ng-mouseleave="imports.events.mouseleave(node, this, $event)"\n      ng-attr-opacity="{{node.opacity}}"\n      ng-attr-transform="translate({{node.x}},{{node.y}})">\n      <rect \n        ng-class="{selected: node.fixed}" \n        class="species node"\n        ng-attr-x="{{-node.width/2}}"\n        ng-attr-y="{{-node.height/2}}"\n        ng-attr-width="{{node.width}}" \n        ng-attr-height="{{node.height}}"\n        ng-attr-ry="{{node.height/2}}"\n        fill="url(#gradient)"\n        ng-click="App.selectSpecies(node.id); isSelected = !isSelected;">\n      </rect>\n      <text class="node-label">{{node.id | truncateTo:8}}</text>\n      <title>ID: {{node.id}}, Name: {{node.name}}</title>\n    </g>\n    <g \n      draggable \n      ng-repeat="node in reactions" \n      ng-attr-opacity="{{imports.showReactionNodes ? 1 : 0}}"\n      ng-attr-transform="translate({{node.x}},{{node.y}})">\n      <circle \n        ng-class="node.classes" \n        class="node" \n        ng-attr-r="{{4}}"\n        fill="black" \n        stroke="black"\n        ng-click="openReactionModal(node)">\n        <title>ID: {{node.id}}, Name: {{node.name}}</title>\n      </circle>\n      <text class="node-label">{{}}</text>\n    </g>\n    <g \n      draggable \n      ng-repeat="node in sourceNodes" \n      ng-attr-transform="translate({{node.x}},{{node.y}})">\n      <g class="null-symbol">\n        <circle \n          class = "node"\n          ng-class="{selected: node.fixed}" \n          ng-attr-r="{{node.height / 2}}"\n          fill="white">\n        </circle>\n        <line \n          class = "node"\n          ng-class="{selected: node.fixed}" \n          ng-attr-x1="{{-10}}" \n          ng-attr-y1="{{10}}"\n          ng-attr-x2="{{10}}" \n          ng-attr-y2="{{-10}}">\n        </line>\n      </g>\n    </g>\n    <g \n      draggable \n      ng-repeat="node in sinkNodes" \n      ng-attr-transform="translate({{node.x}},{{node.y}})">\n      <g class="null-symbol">\n        <circle \n          ng-attr-r="{{node.height / 2}}"\n          class = "node"\n          ng-class="{selected: node.fixed}" \n          fill="white"\n          >\n        </circle>\n        <line \n          class = "node"\n          ng-class="{selected: node.fixed}" \n          ng-attr-x1="{{-10}}" \n          ng-attr-y1="{{10}}"\n          ng-attr-x2="{{10}}" \n          ng-attr-y2="{{-10}}">\n        </line>\n      </g>\n    </g>\n  </g>\n</svg>\n')}]),angular.module("template/tidal.html",[]).run(["$templateCache",function(n){n.put("template/tidal.html",'<svg ng-controller="sgTidalLayoutCtrl" xmlns="http://www.w3.org/2000/svg" ng-attr-height="{{imports && imports.groups.length * imports.subgraph.height || 500}}" ng-attr-width="{{(imports.subgraph.width || 800) + 80}}">\n  <style scoped>\n    svg .node {\n      stroke: #FFB800;\n      stroke-width: 3px;\n      size: 300px;\n    }\n    svg .link {\n      stroke-width: 1.5px;\n    }\n    svg .link.modifier {\n      stroke-dasharray: 5, 5;\n    }\n    svg .node-label {\n      color: #333;\n      stroke-width: 0;\n      font-size: 14px;\n      font-family: Georgia;\n      font-weight: bolder;\n      text-anchor: middle;\n      dominant-baseline: middle;\n    }\n    /*  svg .node.selected {\n    stroke: #FF0000;\n  }\n  svg .link.selected {\n    stroke: #FF0000;\n  }*/\n    svg marker#arrow {\n      stroke: #0013FF;\n      opacity: 1;\n      overflow: visible;\n    }\n    svg .box {\n      stroke: #000;\n      fill: none;\n    }\n  </style>\n  <defs>\n    <marker case-sensitive="refX,refY" id="arrow" viewBox="0 0 10 10" ng-attr-refX="{{-2}}" ng-attr-refY="{{0}}" markerWidth="10" markerHeight="10" orient="auto">\n      <path fill="url(#markerGradient)" transform="rotate(-90)" ng-attr-d="{{arrow({size: 10, type: \'triangle-down\'})}}"></path>\n      <!-- <path d="M0,-5L10,0L0,5"></path> -->\n    </marker>\n    <marker case-sensitive="refX,refY" id="degradation" viewBox="0 -5 10 10" ng-attr-refX="{{0}}" ng-attr-refY="{{0}}" markerWidth="15" markerHeight="15" orient="auto">\n      <path transform="rotate(-90)" ng-attr-d="{{arrow({size: 5, type: \'triangle-down\'})}}"></path>\n      <!-- <path d="M0,-5L10,0L0,5"></path> -->\n    </marker>\n    <marker case-sensitive="refX,refY" id="modifier" markerWidth="8" markerHeight="8" ng-attr-refX="{{0}}" ng-attr-refY="{{0}}" fill="black" orient="auto">\n      <path ng-attr-d="{{arrow({size: 5, type: \'circle\'})}}"></path>\n      <!-- <circle cx="1" cy="1" r="1" fill="black" stroke="black" opacity=".6"></circle> -->\n    </marker>\n    <linearGradient id="gradient">\n      <stop offset="5%" stop-color="#FFDC9E"></stop>\n      <stop offset="95%" stop-color="#FFF"></stop>\n    </linearGradient>\n    <linearGradient id="markerGradient">\n      <stop offset="5%" stop-color="rgb(97, 116, 255)"></stop>\n      <stop offset="95%" stop-color="#FFF"></stop>\n    </linearGradient>\n    <linearGradient id="reactionGradient">\n      <stop offset="5%" stop-color="#B0C0FF"></stop>\n      <stop offset="95%" stop-color="#FFF"></stop>\n    </linearGradient>\n  </defs>\n  <g ng-attr-transform="translate({{translate.x}}, {{translate.y}})scale({{scale}})">\n    <g>\n      <line ng-attr-stroke="{{{\'prb\': \'green\', \'pr\': \'red\'}[link.type]}}" ng-attr-opacity="{{link.opacity || OPACITY.normal}}" ng-mouseover="mouseoverLink(link)" ng-mouseleave="mouseleaveLink(link)" ng-repeat="link in imports.edges" ng-if="link.target.id !== link.source.id"\n      class="link" ng-attr-x1="{{link.x1}}" ng-attr-y1="{{link.y1}}" ng-attr-x2="{{link.x2}}" ng-attr-y2="{{link.y2}}" marker-end="url(#arrow)">\n      </line>\n    </g>\n    <g ng-repeat="group in imports.groups">\n      <g draggable ng-click="clickNode(node, $event)" ng-dblClick="dblClickNode(node, $event)" ng-mouseover="mouseoverNode(node, $event)" ng-mouseleave="mouseleaveNode(node, $event)" ng-attr-opacity="{{node.opacity}}" ng-repeat="node in group.nodes" class="node" ng-attr-transform="translate({{node.x}},{{node.y + $parent.$index * imports.subgraph.height}})">\n        <rect ng-attr-x="{{-node.width/2}}" ng-attr-y="{{-node.height/2}}" ng-attr-width="{{node.width}}" ng-attr-height="{{node.height}}" ng-attr-ry="{{node.height / 2}}" fill="url(#gradient)">\n          <title>ID: {{node.id}}, Name: {{node.name}}</title>\n        </rect>\n        <text class="node-label">{{node.name}}</text>\n      </g>\n      <line ng-show="!$last" class="box" ng-attr-x1="{{0}}" ng-attr-x2="{{imports.subgraph.width}}" ng-attr-y1="{{($index + 1) * imports.subgraph.height}}" ng-attr-y2="{{($index + 1) * imports.subgraph.height}}" />\n      <g>\n        <text ng-attr-transform="rotate({{90}}, {{imports.subgraph.width}}, {{$index * imports.subgraph.height + 10 }})" opacity="0.5" ng-attr-x="{{imports.subgraph.width}}" ng-attr-y="{{$index * imports.subgraph.height + 10 }}" font-family="Georgia" font-size="28">{{group.name}}</text>\n      </g>\n    </g>\n  </g>\n</svg>\n')}]);